import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class StreetWalking
{
	public long minTime(int X, int Y, int walkTime, int sneakTime)
	{
		int temp;
		long ans = 1;
		if (X < Y) {
			temp = X;
			X = Y;
			Y = temp;
		}
		if (sneakTime > 2 * walkTime)
			ans = ans * (X + Y) * walkTime;
		else if (sneakTime > walkTime)
			ans = ans * Y * sneakTime + ans * (X - Y) * walkTime;
		else if ((X + Y) % 2 == 0)
			ans = ans * X * sneakTime;
		else
			ans = ans * (X - 1) * sneakTime + ans * walkTime;
			
		return ans;
			
	}
		// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int p3, boolean hasAnswer, long p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
		System.out.println("]");
		StreetWalking obj;
		long answer;
		obj = new StreetWalking();
		long startTime = System.currentTimeMillis();
		answer = obj.minTime(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p4;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		int p3;
		long p4;
		
		// ----- test 0 -----
		p0 = 4;
		p1 = 2;
		p2 = 3;
		p3 = 10;
		p4 = 18L;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 4;
		p1 = 2;
		p2 = 3;
		p3 = 5;
		p4 = 16L;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 2;
		p1 = 0;
		p2 = 12;
		p3 = 10;
		p4 = 20L;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 25;
		p1 = 18;
		p2 = 7;
		p3 = 11;
		p4 = 247L;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 24;
		p1 = 16;
		p2 = 12;
		p3 = 10;
		p4 = 240L;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 10000000;
		p1 = 50000000;
		p2 = 800;
		p3 = 901;
		p4 = 41010000000L;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = 135;
		p1 = 122;
		p2 = 43;
		p3 = 29;
		p4 = 3929L;
		all_right = KawigiEdit_RunTest(6, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING

}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
