import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class DNAString
{

	public static HashMap<Character, Integer> sHashMap = new HashMap<Character, Integer>();
	
	
	public int minChanges(int maxPeriod, String[] dna)
	{
		int i = 0;
		int j;
		int period = 1;
		int change = 0;
		int len;
		int ans = 0;
		char [] pattern;
		int counts[][];
		String dnaTotal;
		int col;
		int temp;
		
		sHashMap.put('A', 0);
		sHashMap.put('C', 1);
		sHashMap.put('G', 2);
		sHashMap.put('T', 3);
		
		dnaTotal = dna[0];
		
		for (i = 1; i < dna.length; i++)
			dnaTotal += dna[i];
			
		System.out.println("String length: " + dnaTotal.length() + ", Max period: " + maxPeriod);
		len = dnaTotal.length();
		
		for (; period <= maxPeriod; period++) {
		
			counts = new int[period][4];
			
			for (i = 0; i < len; i++) {
				col = sHashMap.get(dnaTotal.charAt(i));
				counts[i % period][col]++;			
			
			}
			
			change = 0;
			
			
			for (i = 0; i < period; i++) {
			
				temp = 0;
				
				for (j = 0; j < 4; j++) {
				
					if (temp < counts[i][j])
						temp = counts[i][j];
				
				}
				change += temp;
			
			}
			
		
	/*		pattern = new char[period];
			
			for (i = 0; i < period; i++)
				pattern[i] = dnaTotal.charAt(i);
				
			change = 0;
			
			len = dnaTotal.length();
			
	//		len = len - len % period;
			
			for (; i < len; i++) {
			
				if (dnaTotal.charAt(i) != pattern[i % period])
					change++;
			
			}
			
			System.out.println("Change: " + change + ", Period: " + period);
			*/
			
			if (change > ans)
				ans = change;
		
		}
		

		System.out.println(dnaTotal);
		
		ans = len - ans;
		
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, String[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p1[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		DNAString obj;
		int answer;
		obj = new DNAString();
		long startTime = System.currentTimeMillis();
		answer = obj.minChanges(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		String[] p1;
		int p2;
		
		// ----- test 0 -----
		p0 = 3;
		p1 = new String[]{"ATAGATA"};
		p2 = 1;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = new String[]{"ACGTGCA"};
		p2 = 3;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 13;
		p1 = new String[]{"ACGCTGACAGATA"};
		p2 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1;
		p1 = new String[]{"AAAATTTCCG"};
		p2 = 6;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 12;
		p1 = new String[]{"ACGTATAGCATGACA","ACAGATATTATG","ACAGATGTAGCAGTA","ACCA","GAC"};
		p2 = 20;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
