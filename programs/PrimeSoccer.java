import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class PrimeSoccer
{
	public double getProbability(int skillOfTeamA, int skillOfTeamB)
	{
		int i;
		int j;
		int n;
		int pA;
		int pB;
		double total = 0;
		double prob;
		double goalA;
		double goalB;
		
		n = 18;
		pA = 100 - skillOfTeamA;
		pB = 100 - skillOfTeamB;
		
		for (i = 0; i <= n; i++) {
		
			if (isPrime(i)) {
				prob = (nCr(n, i) * Math.pow(pA, i) * Math.pow(100 - pA, n - i));
				prob *= (n + 1);
				total += prob;
				continue;
			}
		
			for (j = 0; j <= n; j++) {
			
				if (isPrime(j)) {
					total += (nCr(n, j) * Math.pow(pB, j) * Math.pow(100 - pB, n - j));
				}
			
			}		
		
		}
		
		System.out.println(total);
		
		int N = (n + 1) * (n + 1);
		
		System.out.println(total / N);
		
		return 3.3;
		
	}
	
	public boolean isPrime(int n) {
	
		int i;
		int sqrt;
		
		if (n <= 1)
			return false;
			
		sqrt = (int) Math.sqrt(n);
		
		for (i = 2; i < sqrt; i++) {
		
			if (n % i == 0)
				return false;
		
		}
		
		return true;
		
	
	}
	
	public double nCr(int n, int r) {
	
		int i;
		int x;
		int j;
		double result;
		
		result = 1;
		j = n - r;
		
		for (x = n; x > 0; x--, r--, j--) {
			result *= x;
			if (j > 0)
				result /=  j;
			if (r > 0)
				result /= r;
		
		}
		
		return result;
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, boolean hasAnswer, double p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		PrimeSoccer obj;
		double answer;
		obj = new PrimeSoccer();
		long startTime = System.currentTimeMillis();
		answer = obj.getProbability(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p2 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p2));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		double p2;
		
		// ----- test 0 -----
		p0 = 50;
		p1 = 50;
		p2 = 0.5265618908306351D;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 100;
		p1 = 100;
		p2 = 0.0D;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 12;
		p1 = 89;
		p2 = 0.6772047168840167D;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
