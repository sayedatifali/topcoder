import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class CuttingBitString
{
	public int getmin(String S)
	{
		int i;
		int j;
		int k;
		int q;
		int len;
		int ans[];
		
		len = S.length();
		
		ans = new int[len + 1];
		ans[0] = 0;
		
		for (i = 1; i < len + 1; i++)
			ans[i] = Integer.MAX_VALUE;
		
		k = Integer.MAX_VALUE;
		
		for (i = 0; i < len; i++) {
		
			for (j = 0; j <= i; j++) {
			
				if (powerOfFive(S.substring(j, i + 1))) {
				
					if (ans[j] == Integer.MAX_VALUE)
						continue;
					
					k = ans[j] + 1;
					
					if (k < ans[i + 1])
						ans[i + 1] = k;
					
					continue;
				}			
			}		
		
		}
		
//		System.out.println("Ans array: ");
		
		for (i = 0; i < len + 1; i++)
			System.out.print(ans[i] + ", ");
		
//		powerOfFive(S);

		k = ans[len];
		
		if (k == Integer.MAX_VALUE)
			return -1;
		
		return k;
	}
	
	public boolean powerOfFive(String s) {
	
		long num;
		int i;
		int len;
		
//		System.out.println(s);
		
		if (s == null || s == "" || s.length() == 0)
			return false;
		
//		System.out.println("String len is : '" + s.length() + "'" );
		
		if (s.charAt(0) == '0')
			return false;
			
		num = 0;
		len = s.length();
		
		for (i = len - 1; i >= 0; i--) {
//			System.out.println(s.charAt(i));
			num += ((s.charAt(i) - '0') * Math.pow(2, len - i - 1));			
		
		}

//		System.out.println(num);
				
		while (num % 5 == 0) {
			num /= 5;		
		}
		
		return num == 1;
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		CuttingBitString obj;
		int answer;
		obj = new CuttingBitString();
		long startTime = System.currentTimeMillis();
		answer = obj.getmin(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		int p1;
		
		// ----- test 0 -----
		p0 = "101101101";
		p1 = 3;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "1111101";
		p1 = 1;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "00000";
		p1 = -1;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "110011011";
		p1 = 3;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "1000101011";
		p1 = -1;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "111011100110101100101110111";
		p1 = 5;
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
