import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class ConvertibleStrings
{
	public int leastRemovals(String A, String B)
	{
		int i, j;
		int N;
		int min = Integer.MAX_VALUE;
		int count;
		char map[] = new char[] {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'};
		int a[] = new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8};
		
		char cur_map[] = new char[9];
		
		N = A.length();
		
		do {
		
			for ( i = 0; i < 9; i++) {
				cur_map[i] = map[a[i]];			
			}
			
//			for (j = 0; j < 9; j++)
//				System.out.print(cur_map[j] + " ");
//				
//			System.out.println();
			count = 0;
			for (j = 0; j < N; j++) {
				if (B.charAt(j) != cur_map[A.charAt(j) - 'A'])
					count++;
			}
			
			min = Math.min(min, count);
			
		} while (nextPerm(a));
		
		return min;
		
	}
	
	public boolean nextPerm(int[] a) {

		int i;
		int j;
		int N;
		int temp;

		N = a.length;
		i = N - 2;

		for (; i >= 0; i--) {
			if (a[i] < a[i + 1])
				break;
		}
		if (i < 0)
			return false;

		for (j = N - 1; j >= i; j--) {
			if (a[j] > a[i]) {
				temp = a[j];
				a[j] = a[i];
				a[i] = temp;
				break;
			}
		}

		for (j = i + 1; j < (N + i + 1) / 2; j++) {
			temp = a[N - j + i];
			a[N - j + i] = a[j];
			a[j] = temp;
		}

		return true;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"");
		System.out.println("]");
		ConvertibleStrings obj;
		int answer;
		obj = new ConvertibleStrings();
		long startTime = System.currentTimeMillis();
		answer = obj.leastRemovals(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		int p2;
		
		// ----- test 0 -----
		p0 = "DD";
		p1 = "FF";
		p2 = 0;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "AAAA";
		p1 = "ABCD";
		p2 = 3;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "AAIAIA";
		p1 = "BCDBEE";
		p2 = 3;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "ABACDCECDCDAAABBFBEHBDFDDHHD";
		p1 = "GBGCDCECDCHAAIBBFHEBBDFHHHHE";
		p2 = 9;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}



//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
