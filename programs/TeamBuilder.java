import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TeamBuilder
{
	public boolean marked[];
	public int V;
	public int count;
	
	public int[] specialLocations(String[] paths)
	{
		int i, j;
		int reach = 0, reachable = 0;
		count = 0;
		boolean r;		
		
		V = paths.length;
		
		for (i = 0; i < V; i++) {
			marked = new boolean[V];
			dfs(paths, i);
			
			for (j = 0; j < V; j++) {
				if (!marked[j]) {
					break;
				}
			}
			
			if (j == V)
				reach++;
			
			r = true;
				
			for (int k = 0; k < V; k++) {
				if (k == i)
					continue;
			
				marked = new boolean[V];
						
				r &= dfs(paths, k, i);
				
				if (!r)
					break;
			
			}
			
			if (r)
				reachable++;
			
		}
		
		return new int[] {reach, reachable};
	}
	
	public boolean dfs(String[] paths, int v, int dest) {
	
		boolean r;
		
		if (v == dest)
			return true;
		
		if (marked[v])
			return false;
		
		marked[v] = true;
		r = false;
		
		for (int i = 0; i < V; i++) {
			if(!marked[i] && paths[v].charAt(i) == '1') {
				r |= dfs(paths, i, dest);
				if (r)
					return r;
			}
		}
		
		return r;	
	
	}
	
	public void dfs(String [] paths, int v) {
	
		if (marked[v])
			return;
		
		marked[v] = true;
		
		for (int i = 0; i < V; i++) {
			if(!marked[i] && paths[v].charAt(i) == '1')
				dfs(paths, i);
		}
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		TeamBuilder obj;
		int[] answer;
		obj = new TeamBuilder();
		long startTime = System.currentTimeMillis();
		answer = obj.specialLocations(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p1[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p1[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int[] p1;
		
		// ----- test 0 -----
		p0 = new String[]{"010","000","110"};
		p1 = new int[]{1,1};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"0010","1000","1100","1000"};
		p1 = new int[]{1,3};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"01000","00100","00010","00001","10000"};
		p1 = new int[]{5,5};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"0110000","1000100","0000001","0010000","0110000","1000010","0001000"};
		p1 = new int[]{1,3};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
