import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class StringWeightDiv2
{
	public static int sMod = 1000000009;
	public long [][] mem;
	
	public int countMinimums(int L)
	{
		int i;
		int j;
		long ans = 1;
		
		if (L <= 26) {
		
			for (i = 1; i <= L; i++) {
				ans *= (26 - i + 1);
				ans %= sMod;			
			}		
		}
		
		else {
			mem = new long[27][L + 1];
			
			for (i = 0; i < 27; i++) {
				for (j = 0; j < L + 1; j++) {
					mem[i][j] = -1;
				}
			}
			
			ans = (int) rec(26, L);
			
		}
		
		return (int) ans;
		
	}
	
	public long rec(int a, int L) {
	
		int i;
		long ans;
		
		if (L == 0 && a == 0)
			return 1;
		
		if (L == 0)
			return 0;
			
		if (a == 1)
			return 1;
		
//		System.out.println("a = " + a + "; L = " + L);
		
		if (mem[a][L] != -1)
			return mem[a][L];
		
		ans = 0;
		
		for (i = 1; i <= L; i++) {
		
			ans += ((rec(a - 1, L - i)));
			
			ans %= sMod;
		
		}
		
		ans = (a * ans) % sMod;
		
		mem[a][L] = ans;
	
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		StringWeightDiv2 obj;
		int answer;
		obj = new StringWeightDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.countMinimums(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 26;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = 650;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 50;
		p1 = 488801539;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
