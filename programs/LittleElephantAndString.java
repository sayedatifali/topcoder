import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class LittleElephantAndString
{
	public int getNumber(String A, String B)
	{
		int i;
		int len;
		int strA[] = new int [26];
		int strB[] = new int [26];
		
		char charA[] = A.toCharArray();
		char charB[] = B.toCharArray();
		
		len = A.length();
		
		if ( !checkSameOccurrence(A, B, strA, strB))
			return -1;
		
		
		for (i = 0; i < len; i++) {
		
			if (checkSequence(charA, charB, i, len))
				return i;
		
		}
		
		return -1;
		
		
	}
	
	public boolean checkSequence(char [] A, char [] B, int i, int N) {
	
		int j;
		int k = 0;
		
//		System.out.println("j start = " + i + "; k start = " + k);
		
		for (j = i; j < N && k < N; j++, k++) {
		
			while (k < N && (A[k] != B[j]))
				k++;
				
			if (k >= N)
				break;
		
		}
		
//		System.out.println("j end = " + j + "; k end = " + k);	
		if (j == N)
			return true;
	
		return false;
	
	}
	
	
	public boolean checkSameOccurrence(String A, String B, int [] strA, int [] strB) {
	
		int i;
		
		for (i = 0; i < A.length(); i++) {
			strA[A.charAt(i) - 'A']++;
			strB[B.charAt(i) - 'A']++;
		}
		
		for (i = 0; i < 26; i++) {
			if (strA[i] != strB[i])
				return false;		
		}
		
		return true;
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"");
		System.out.println("]");
		LittleElephantAndString obj;
		int answer;
		obj = new LittleElephantAndString();
		long startTime = System.currentTimeMillis();
		answer = obj.getNumber(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		int p2;
		
		// ----- test 0 -----
		p0 = "ABC";
		p1 = "CBA";
		p2 = 2;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "A";
		p1 = "B";
		p2 = -1;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "AAABBB";
		p1 = "BBBAAA";
		p2 = 3;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		p1 = "ZYXWVUTSRQPONMLKJIHGFEDCBA";
		p2 = 25;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "A";
		p1 = "A";
		p2 = 0;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "DCABA";
		p1 = "DACBA";
		p2 = 2;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
