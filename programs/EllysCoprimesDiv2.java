import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class EllysCoprimesDiv2
{
	public int getCount(int[] numbers)
	{
		int i;
		int N;
		int count = 0;
		
		N = numbers.length;
		
		Arrays.sort(numbers);
		
		for (i = 0; i < N - 1; i++) {
		
			if (gcd(numbers[i], numbers[i + 1]) != 1) {
				
				if (!chooseNumber(numbers[i], numbers[i + 1]))
					count++;
					
				count++;
				
			}
		
		}
		
	//	return gcd(2195, 2184);
		
		return count;
		
	}
	
	public boolean chooseNumber(int a, int b) {
	
		int i;
		
		for (i = a + 1; i < b; i++) {
		
			if ( (gcd(a, i) == 1) && (gcd(i, b) == 1))
				return true;
		
		}
		
		return false;
	
	}
	
	public int gcd(int a, int b) {
	
		if (b == 0)
			return a;
		
		return gcd(b, a % b);
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}");
		System.out.println("]");
		EllysCoprimesDiv2 obj;
		int answer;
		obj = new EllysCoprimesDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.getCount(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new int[]{2200,42,2184,17};
		p1 = 3;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{13,1,6,20,33};
		p1 = 0;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{7,42};
		p1 = 1;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{55780,44918,55653,4762,41536,40083,79260,7374,24124,91858,7856,12999,64025,12706,19770,71495,32817,79309,53779,8421,97984,34586,893,64549,77792,12143,52732,94416,54207,51811,80845,67079,14829,25350,22976,23932,62273,58871,82358,13283,33667,64263,1337,42666};
		p1 = 15;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
