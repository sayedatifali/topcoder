import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class BreakingTheCode
{
	public String decodingEncoding(String code, String message)
	{
		String codeVal;
		String token;
		String ans = new String();
		HashMap<Character, String> sHashMap = new HashMap<Character, String>();
		HashMap<String, Character> sReverseHashMap = new HashMap<String, Character>();
		
		for (int i = 1; i <= 26; i++) {
		
			if (i < 10) {
			
				codeVal = '0' + String.valueOf(i);
			
			}
			else 
				codeVal = String.valueOf(i);
				
			sHashMap.put(code.charAt(i - 1), codeVal);
			sReverseHashMap.put(codeVal, code.charAt(i - 1));

			System.out.println(codeVal);
		
		}
		
		
		if (message.charAt(0) >= 'a' && message.charAt(0) <= 'z') {
		
			for (int i = 0; i < message.length(); i++) {
			
				ans += sHashMap.get(message.charAt(i));
			
			}
		
		}
		
		else {
		
			for (int i = 0; i < message.length(); i += 2) {
				
				token = message.substring(i, i + 2);
				
				
				ans += String.valueOf(sReverseHashMap.get(token));
			
			}
		
		}
		

		
		return ans;
	}
		// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"");
		System.out.println("]");
		BreakingTheCode obj;
		String answer;
		obj = new BreakingTheCode();
		long startTime = System.currentTimeMillis();
		answer = obj.decodingEncoding(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		String p2;
		
		// ----- test 0 -----
		p0 = "abcdefghijklmnopqrstuvwxyz";
		p1 = "test";
		p2 = "20051920";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "abcdefghijklmnopqrstuvwxyz";
		p1 = "20051920";
		p2 = "test";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "qesdfvujrockgpthzymbnxawli";
		p1 = "mwiizkelza";
		p2 = "19242626171202251723";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "faxmswrpnqdbygcthuvkojizle";
		p1 = "02170308060416192402";
		p2 = "ahxpwmtvza";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING

}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
