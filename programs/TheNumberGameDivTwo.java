import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TheNumberGameDivTwo
{
	public static boolean [] prime;
	public static int [] status;
	
	public String find(int n)
	{
		int i;
		
		prime = new boolean[1001];
		status = new int[1001];
		
		status[0] = 0;
		status[1] = 0;
		
		for (i = 2; i < 1001; i++) {
	//		prime[i] = true;
			status[i] = -1;
		}
		
		sieveOfEratosThenes(prime, 1000);
		
		
		if (rec(n))
			return "John";		
		
		return "Brus";
	}
	
	public boolean rec(int n) {
	
		int i;
		boolean stat;
		
		if (n == 0 || n == 1 || prime[n])
			return false;

		if (status[n] != -1)
			return (status[n] == 1 ? true: false);
		
		for (i = 2; i < n; i++) {
		
			if (n % i == 0) {
			
				stat = rec(n - i);
				
				status[n] = stat ? 0 : 1;
				
				if (!stat)
					return true;
			
			}
		
		}
		
		status[n] = 0;
	
		return false;
	
	}
	
	public void sieveOfEratosThenes(boolean [] prime, int N) {
	
		int i;
		int j;
		
		prime = new boolean[N + 1];
		
		for (i = 2; i < N + 1; i++) {
			prime[i] = true;
		}
		
		for (i = 2; i < N + 1; i++) {
		
			j = 2 * i;
			
			if (!prime[i])
				continue;
			
			while (j < N + 1) {
			
				prime[j] = false;
				
				j *= 2;
			
			}
		
		}
		
	//	for (i = 0; i < N; i++)
	//		System.out.println(i + ": " + prime[i]);
		
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		TheNumberGameDivTwo obj;
		String answer;
		obj = new TheNumberGameDivTwo();
		long startTime = System.currentTimeMillis();
		answer = obj.find(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		String p1;
		
		// ----- test 0 -----
		p0 = 6;
		p1 = "John";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = "Brus";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 747;
		p1 = "Brus";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 128;
		p1 = "Brus";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
