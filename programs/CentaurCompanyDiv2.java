import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class CentaurCompanyDiv2
{
	public int N;
	public int [][] G;
	
	public void buildTree(int [] a, int [] b, int parent, int child) {
	
		int i;
		int degree;
		
		degree = 0;
		
		for (i = 0; i < N - 1; i++) {
		
			if ((parent == a[i] - 1) || (parent == b[i] - 1))
				continue;
			
			if ((a[i] - 1 == child) || (b[i] - 1 == child)) {
				G[child][degree++] = (a[i] - 1 == child) ? b[i] - 1: a[i] - 1;
				buildTree(a, b, child, G[child][degree - 1]);
			}
		
		}
	}
	
	public long countTrees(boolean mask, int root) {
	
		int i;
		long count = 0;
		
		if (root == -1)
			return 0;
		
		if (!mask) {
		
			count = countTrees(true, root);
			
			for (i = 0; i < N - 1; i++) {
				
				count += countTrees(false, G[root][i]);
			
			}
		
		} else {
		
			count = 1;
			
			for (i = 0; i < N - 1; i++) {
			
				count *= (1 + countTrees(true, G[root][i]));
			
			}
		
		}
		
		return count;
	
	}
	
	public void initTree() {
	
		int i, j;
		
		for (i = 0; i < N; i++) {
			for (j = 0; j < N - 1; j++) {
				G[i][j] = -1;
			}
		}
	
	}
	
	public long count(int[] a, int[] b)
	{
		int i, j;
		N = a.length + 1;
		G = new int[N][N - 1];		
		
		initTree();
		buildTree(a, b, -1, 0);
	/*	
		for (i = 0; i < N; i++) {
			for (j = 0; j < N - 1; j++) {
				System.out.print(G[i][j] + " ");
			}
			System.out.println();
		}
	*/
		
		return countTrees(false, 0) + 1;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, long p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		CentaurCompanyDiv2 obj;
		long answer;
		obj = new CentaurCompanyDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.count(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		long p2;
		
		// ----- test 0 -----
		p0 = new int[]{1};
		p1 = new int[]{2};
		p2 = 4L;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{2,2};
		p1 = new int[]{1,3};
		p2 = 7L;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{1,2,3,4,5,6,7,8,9};
		p1 = new int[]{2,3,4,5,6,7,8,9,10};
		p2 = 56L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
		p1 = new int[]{2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51};
		p2 = 1125899906842675L;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{10,7,2,5,6,2,4,9,7};
		p1 = new int[]{8,10,10,4,1,6,2,2,3};
		p2 = 144L;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
