import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TheShuttles
{
	public int getLeastCost(int[] cnt, int baseCost, int seatCost)
	{
		int i;
		int j;
		int N;
		int min = Integer.MAX_VALUE;
		int totalCnt;
		
		Arrays.sort(cnt);
		
		N = cnt.length;
		
		totalCnt = 0;

		for (i = 0; i < N; i++) {
			totalCnt += cnt[i];		
		}
		int bus;
		int temp;
		
		for (i = 1; i <= cnt[N - 1]; i++) {
		
			bus = 0;
			
			for (j = 0; j < N; j++) {
				
				bus += cnt[j] / i;
			
				if (cnt[j] % i != 0)
					bus++;
			}
			
			
			temp = bus * (baseCost + i * seatCost);
			
			min = Math.min(temp, min);
			
	//		System.out.println("i = " + i + "; bus = " + bus + "; totalCount = " + totalCnt + "; temp  = " + temp + "; min = " + min);
		}
		
		return min;
		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1 + "," + p2);
		System.out.println("]");
		TheShuttles obj;
		int answer;
		obj = new TheShuttles();
		long startTime = System.currentTimeMillis();
		answer = obj.getLeastCost(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		int p2;
		int p3;
		
		// ----- test 0 -----
		p0 = new int[]{9};
		p1 = 30;
		p2 = 5;
		p3 = 75;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{9,4};
		p1 = 30;
		p2 = 5;
		p3 = 150;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{9,4};
		p1 = 10;
		p2 = 5;
		p3 = 105;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{51,1,77,14,17,10,80};
		p1 = 32;
		p2 = 40;
		p3 = 12096;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
