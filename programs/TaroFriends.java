import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TaroFriends
{
	public int getNumber(int[] coordinates, int X)
	{
		int i, j;
		int N;
		int min;
		int max;
		
		N = coordinates.length;
		
		if (N == 1)
			return 0;
			
		Arrays.sort(coordinates);
		
		int [] c = coordinates;
		
		min = c[0];
		max = c[N - 1];
		
		
		i = 0;
		j = N - 1;
		int diff;
		
		if (c[j] - c[i] <= Math.abs(c[j] - X - c[i] - X))
			return c[j] - c[i];

		min = Math.min(c[0] + X, c[N - 1] - X);
		max = Math.max(c[0] + X, c[N - 1] - X);
		
		i++;
		j--;
		
		while (i <= j) {
		
			if (c[i] - X >= min && c[i] - X <= max)
				continue;
				
			if (c[i] + X >= min && c[i] + X <= max)
				continue;
				
			
			
			if (Math.abs(c[i] - X - min) > Math.abs(c[i] - X - max)) {
				
				
			
			}
		
			if (c[i] < 0 && c[j] > 0) {
			
				min = Math.min(c[i] + X, c[j] - X);
				
				max = Math.max(c[i] + X, c[j] - X);
			
			} else {
				
				if (
				
					
			
			}
			
		
//			diff = Math.abs(c[j] - c[i]);
			
			i++;
			j--;
		}
		
		/*
		int m, n;
		
		m = c[0] + X;
		
		for (i = 1; i < N; i++) {
		
			if (Math.abs(
		
		
		}
		
		
		n = c[0] - X;
		
		*/
		
		return max - min;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		TaroFriends obj;
		int answer;
		obj = new TaroFriends();
		long startTime = System.currentTimeMillis();
		answer = obj.getNumber(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		int p2;
		
		// ----- test 0 -----
		p0 = new int[]{-3,0,1};
		p1 = 3;
		p2 = 3;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{4,7,-7};
		p1 = 5;
		p2 = 4;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{-100000000,100000000};
		p1 = 100000000;
		p2 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{3,7,4,6,-10,7,10,9,-5};
		p1 = 7;
		p2 = 7;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{-4,0,4,0};
		p1 = 4;
		p2 = 4;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{7};
		p1 = 0;
		p2 = 0;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
