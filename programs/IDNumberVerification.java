import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class IDNumberVerification
{
	public String verify(String id, String[] regionCodes)
	{
		int i, j;
		int N;
		int last;
		int check_last;
		int code;
		boolean status = false;
		int seq;
		int day;
		int month [] = new int [] {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
		int year;
		int m;
		
		N = regionCodes.length;

//		System.out.println("Sub string: " + id.substring(0, 6));
				
		for (i = 0; i < N; i++) {
		
			if (regionCodes[i].equals(id.substring(0, 6))) {
				status = true;
//				System.out.println("Sub string: " + id.substring(0, 6));
				break;
			}
		
		}
		
		if (!status)
			return "Invalid";
			
			
		year = Integer.parseInt(id.substring(6, 10));
		m = Integer.parseInt(id.substring(10, 12));
		day = Integer.parseInt(id.substring(12, 14));
		
		System.out.println("year = " + year + "; month = " + m + "; day = " + day);
		
		if (m < 1 || m > 12)
			return "Invalid";
			
		if (day <= 0 || day > 31)
			return "Invalid";
		
		if ((year % 4 == 0 && year % 100 != 0)	|| (year % 400 == 0)) {
			
			if (m == 2) {				
				if (day > 29)
					return "Invalid";			
			}
			
			else if ( day > month[m - 1])
				return "Invalid";
		
		}
		else {
		
			if ( day > month[m - 1])
			return "Invalid";
				
		}
		
		if (year < 1900 || year > 2011)
			return "Invalid";
		
		last = id.charAt(17) == 'X' ? 10 : id.charAt(17) - '0';
		
		code = 0;
		
		for (i = 1; i <= 17; i++) {
		
			code += (( 1 << (18 - i) ) * (id.charAt(i - 1) - '0'));
			System.out.println("Code = " + code);			
			code %= 11;
		
		}
		
		System.out.println("Code = " + code);
		
		code %= 11;
		
		check_last = (12 - code) % 11;
		
		System.out.println("check last = " + check_last + "; last = " + last);
		
		if (last != check_last)
			return "Invalid";
			
		
		seq = Integer.parseInt(id.substring(14, 17));
		
		System.out.println("seq = " + seq);
		
		if (seq == 0)
			return "Invalid";
			
		if (seq % 2 == 0)
			return "Female";
		
		return "Male";
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String[] p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p1[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		IDNumberVerification obj;
		String answer;
		obj = new IDNumberVerification();
		long startTime = System.currentTimeMillis();
		answer = obj.verify(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String[] p1;
		String p2;
		
		// ----- test 0 -----
		p0 = "441323200312060636";
		p1 = new String[]{"441323"};
		p2 = "Male";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "62012319240507058X";
		p1 = new String[]{"620123"};
		p2 = "Female";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "321669197204300886";
		p1 = new String[]{"610111","659004"};
		p2 = "Invalid";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "230231198306900162";
		p1 = new String[]{"230231"};
		p2 = "Invalid";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "341400198407260005";
		p1 = new String[]{"341400"};
		p2 = "Invalid";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "520381193206090891";
		p1 = new String[]{"532922","520381"};
		p2 = "Invalid";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
