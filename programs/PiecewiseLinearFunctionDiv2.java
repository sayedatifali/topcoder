import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class PiecewiseLinearFunctionDiv2
{
	public int[] countSolutions(int[] Y, int[] query)
	{
		int N;
		int Q;
		int i, j;
		int [] ans;
		int px, py;
		int count;
		
		N = Y.length;
		Q = query.length;
		
		ans = new int[Q];
		
		
		for (i = 0; i < Q; i++) {
			count = 0;
			
			px = i;
			py = query[i];
			
			ans[i] = count (Y, py);		
		
		}		
		
		
		return ans;
		
	}
	
	public int count (int [] Y, int py) {
	
		int i, j;
		int N;
		
		N = Y.length;
		
		int count = 0;
		
		
		for (i = 0; i < N; i++) {
		
	//		for (j = i + 1; j < N; j++) {
			
				if ( i != N - 1) {
				
					if ((Y[i] == Y[i + 1]) && (Y[i] == py))
						return -1;
						
					if ( (Y[i] < py) && (py < Y[i + 1]))
						count++;
						
					else if ( (Y[i] > py) && (py > Y[i + 1]))
						count++;
				}
				
				if ( Y[i] == py )
					count++;
				
	//		}
			
		}
		
		
		return count;
		
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int[] p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		PiecewiseLinearFunctionDiv2 obj;
		int[] answer;
		obj = new PiecewiseLinearFunctionDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.countSolutions(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p2[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p2[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int[] p2;
		
		// ----- test 0 -----
		p0 = new int[]{1,4,-1,2};
		p1 = new int[]{-2,-1,0,1};
		p2 = new int[]{0,1,2,3};
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{0,0};
		p1 = new int[]{-1,0,1};
		p2 = new int[]{0,-1,0};
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{2,4,8,0,3,-6,10};
		p1 = new int[]{0,1,2,3,4,0,65536};
		p2 = new int[]{3,4,5,4,3,3,0};
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{-178080289,-771314989,-237251715,-949949900,-437883156,-835236871,-316363230,-929746634,-671700962};
		p1 = new int[]{-673197622,-437883156,-251072978,221380900,-771314989,-949949900,-910604034,-671700962,-929746634,-316363230};
		p2 = new int[]{8,6,3,0,7,1,4,8,3,4};
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
