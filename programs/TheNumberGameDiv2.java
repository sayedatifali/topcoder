import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TheNumberGameDiv2
{
	public int count;
	
	public int minimumMoves(int A, int B)
	{
		
		count = Integer.MAX_VALUE;
		
		dfs(A, B, 0);
		
		if (A == B)
			return 0;
		
		return (count == Integer.MAX_VALUE ? -1 : count);
	}
	
	public void dfs(int A, int B, int c) {
	
		if (A == B) {
			count = Math.min(count, c);
			return;
		}
		
		if (c > 22)
			return;
			
		dfs(reverseInteger(A), B, c + 1);
		
		dfs(A / 10, B, c + 1);
		
	
	}
	
	
	public int reverseInteger(int A) {
	
		int i;
		int num = 0;
		
		while (A > 0) {
		
			i = A % 10;
			
			num = num * 10 + i;
			
			A /= 10;
		
		}
		
		return num;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		TheNumberGameDiv2 obj;
		int answer;
		obj = new TheNumberGameDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.minimumMoves(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		
		// ----- test 0 -----
		p0 = 25;
		p1 = 5;
		p2 = 2;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 5162;
		p1 = 16;
		p2 = 4;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 334;
		p1 = 12;
		p2 = -1;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 218181918;
		p1 = 9181;
		p2 = 6;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 9798147;
		p1 = 79817;
		p2 = -1;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
