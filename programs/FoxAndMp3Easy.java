import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class FoxAndMp3Easy
{
	public String[] playList(int n)
	{
		int i;
		String[] str;
		String [] ans;
		
		str = new String[n];
		
		
		for (i = 1; i <= n; i++)
			str[i - 1] = new String(Integer.toString(i) + ".mp3");
			
//		Arrays.sort(str, new StrComp());

		Arrays.sort(str);
		
		if (n > 50)
			n = 50;
			
		ans = new String[n];
		
		for (i = 0; i < n; i++)
			ans[i] = str[i];
		
		return ans;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		FoxAndMp3Easy obj;
		String[] answer;
		obj = new FoxAndMp3Easy();
		long startTime = System.currentTimeMillis();
		answer = obj.playList(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		String[] p1;
		
		// ----- test 0 -----
		p0 = 3;
		p1 = new String[]{"1.mp3","2.mp3","3.mp3"};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 10;
		p1 = new String[]{"1.mp3","10.mp3","2.mp3","3.mp3","4.mp3","5.mp3","6.mp3","7.mp3","8.mp3","9.mp3"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 16;
		p1 = new String[]{"1.mp3","10.mp3","11.mp3","12.mp3","13.mp3","14.mp3","15.mp3","16.mp3","2.mp3","3.mp3","4.mp3","5.mp3","6.mp3","7.mp3","8.mp3","9.mp3"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 32;
		p1 = new String[]{"1.mp3","10.mp3","11.mp3","12.mp3","13.mp3","14.mp3","15.mp3","16.mp3","17.mp3","18.mp3","19.mp3","2.mp3","20.mp3","21.mp3","22.mp3","23.mp3","24.mp3","25.mp3","26.mp3","27.mp3","28.mp3","29.mp3","3.mp3","30.mp3","31.mp3","32.mp3","4.mp3","5.mp3","6.mp3","7.mp3","8.mp3","9.mp3"};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 109;
		p1 = new String[]{"1.mp3","10.mp3","100.mp3","101.mp3","102.mp3","103.mp3","104.mp3","105.mp3","106.mp3","107.mp3","108.mp3","109.mp3","11.mp3","12.mp3","13.mp3","14.mp3","15.mp3","16.mp3","17.mp3","18.mp3","19.mp3","2.mp3","20.mp3","21.mp3","22.mp3","23.mp3","24.mp3","25.mp3","26.mp3","27.mp3","28.mp3","29.mp3","3.mp3","30.mp3","31.mp3","32.mp3","33.mp3","34.mp3","35.mp3","36.mp3","37.mp3","38.mp3","39.mp3","4.mp3","40.mp3","41.mp3","42.mp3","43.mp3","44.mp3","45.mp3"};
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

class StrComp implements Comparator<String> {

	public int compare(String arg0, String arg1) {
	
		int i;
		int n1, n2;
		
		i = 0;
		
		n1 = arg0.length();
		n2 = arg1.length();
		
		for (i = 0; i < Math.min(n1, n2); i++) {
		
			if (arg0.charAt(i) < arg1.charAt(i))
				return -1;
				
			else if (arg0.charAt(i) > arg1.charAt(i))
				return 1;
		
		}
		
		return 0;
	
	}

}

//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
