import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class MinimumSquareEasy
{
	public long minArea(int[] x, int[] y)
	{
		int i, j;
		int k;
		long side;
		long minSide = Long.MAX_VALUE;
		int N;
		int x1, x2;
		int y1, y2;
		int newx[];
		int newy[];
		int p;
		
		N = x.length;
		
		if (N == 3)
			return 4;
			
		newx = new int[N - 2];
		newy = new int[N - 2];
			
		for (i = 0; i < N; i++) {
		
			for (j = i + 1; j < N; j++) {
				
				p = 0;
				
				for (k = 0; k < N ; k++) {
					if (k == i || k == j)
						continue;
					
					newx[p] = x[k];
					newy[p] = y[k];
					
					p++;
				}
				
				Arrays.sort(newx);
				Arrays.sort(newy);
				
				x1 = newx[0];
				x2 = newx[N - 3];
				
				y1 = newy[0];
				y2 = newy[N - 3];
				
				side = Math.max(x2 - x1, y2 - y1) + 2;
				
				minSide = Math.min(minSide, side);
			
			}
		
		}		
		
		return minSide * minSide;
		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, long p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		MinimumSquareEasy obj;
		long answer;
		obj = new MinimumSquareEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.minArea(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		long p2;
		
		// ----- test 0 -----
		p0 = new int[]{0,1,2};
		p1 = new int[]{0,1,5};
		p2 = 4L;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{-1,-1,0,2,0};
		p1 = new int[]{-2,-1,0,-1,-2};
		p2 = 9L;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{1000000000,-1000000000,1000000000,-1000000000};
		p1 = new int[]{1000000000,1000000000,-1000000000,-1000000000};
		p2 = 4000000008000000004L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{93,34,12,-11,-7,-21,51,-22,59,74,-19,29,-56,-95,-96,9,44,-37,-54,-21};
		p1 = new int[]{64,12,-43,20,55,74,-20,-54,24,20,-18,77,86,22,47,-24,-33,-57,5,7};
		p2 = 22801L;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
