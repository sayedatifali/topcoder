import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class CellRemoval
{
	public int cellsLeft(int[] parent, int deletedCell)
	{
		boolean alive[];
		int N;
		int i, j;
		int cellsLeft;
		
		N = parent.length;
		
		alive = new boolean[N];
		
		cellsLeft = 0;
		
		for (i = 0; i < N; i++)
			alive[i] = true;
		
		for (i = 0; i < N; i++) {
		
			if (parent[i] == -1)
				alive[i] = false;
				
			else {
				alive[parent[i]] = false;
			}
			
	/*		if (i == deletedCell && parent[i] != -1) {
				alive[i] = false;
				alive[parent[i]] = false;
			}
	*/	
		}
		
		deleteCell(deletedCell, alive, parent);
		
		for (i = 0; i < N; i++) {
		
	//		System.out.println("i = " + i + "; Alive: " + alive[i]);
			
			if (alive[i])
				cellsLeft++;		
		}
		
		return cellsLeft;
		
	}
	
	public void deleteCell(int dC, boolean [] alive, int [] parent) {
	
		int j;
		
		alive[dC] = false;
		
		
		
		for (j = 0; j < parent.length; j++) {
		
			if (dC == parent[j]) {
		//		System.out.println(dC);
				alive[j] = false;
				deleteCell(j, alive, parent);
			}
		
		}
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		CellRemoval obj;
		int answer;
		obj = new CellRemoval();
		long startTime = System.currentTimeMillis();
		answer = obj.cellsLeft(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		int p2;
		
		// ----- test 0 -----
		p0 = new int[]{-1,0,0,1,1};
		p1 = 2;
		p2 = 2;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{-1,0,0,1,1};
		p1 = 1;
		p2 = 1;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{-1,0,0,1,1};
		p1 = 0;
		p2 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{-1,0,0,2,2,4,4,6,6};
		p1 = 4;
		p2 = 2;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{26,2,32,36,40,19,43,24,30,13,21,14,24,21,19,4,30,10,44,12,7,32,17,43,35,18,7,36,10,16,5,38,35,4,13,-1,16,26,1,12,2,5,18,40,1,17,38,44,14};
		p1 = 24;
		p2 = 14;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
