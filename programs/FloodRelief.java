import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

// Find connected components

public class FloodRelief
{
	public int N;
	public int M;
	public static int di[] = new int[] {0, -1, 0, 1};
	public static int dj[] = new int[] {-1, 0, 1, 0};
	public boolean flow[][];
	public int pumps;
	
	public int minimumPumps(String[] heights)
	{
		int i, j;
		char c;
		Point pt;
		
		M = heights.length;
		N = heights[0].length();

		flow = new boolean[M][N];
		
		pumps = 0;
		
		while((pt = nextPoint(heights)) != null) {
		
			System.out.println("(p,q) = (" + pt.i + "," + pt.j + ")");
		
			dfs(heights, pt.i, pt.j);
			pumps++;		
		
		}
		
		return pumps;
		
	}

		
	public void dfs(String [] heights, int p, int q) {
	
		int i, j;
		int pp, qq;
			
//		System.out.println("Co-ordinates: (" + p + "," + q + ")");
		if (flow[p][q])
			return;	
		
		flow[p][q] = true;
		
		for (i = 0; i < di.length; i++) {
			pp = p + di[i];
			qq = q + dj[i];
			if (!isValidIndex(pp, qq))
				continue;
			if (heights[p].charAt(q) <= heights[pp].charAt(qq)) {
				dfs(heights, pp, qq);
			}
		}
		
	}
	
	public boolean isValidIndex(int p, int q) {
	
		if (p < 0 || p >= M || q < 0 || q >= N)
			return false;
			
		return true;
	
	}

	public Point nextPoint(String [] heights) {
	
		char c = 255;
		Point p;
		
		p = null;
		
		for (int i = 0; i < M; i++) {
			for (int j = 0; j < N; j++) {
				if (heights[i].charAt(j) < c && !flow[i][j]) {
					c = heights[i].charAt(j);
					if (p == null)
						p = new Point(i, j);
					else {
						p.i = i;
						p.j = j;
					}
				}
			}
		}
		
		return p;
	
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		FloodRelief obj;
		int answer;
		obj = new FloodRelief();
		long startTime = System.currentTimeMillis();
		answer = obj.minimumPumps(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{"ccccc","cbbbc","cbabc","cbbbc","ccccc"};
		p1 = 1;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"cbabcbabc","cbabcbabc","cbabcbabc","cbabcbabc"};
		p1 = 2;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"ccccccccccc","caaaaaaaaac","caaaaaaaaac","caazpppzaac","caapdddpaac","caapdddpaac","caapdddpaac","caazpppzaac","caaaaaaaaac","caaaaaaaaac","ccccccccccc"};
		p1 = 2;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"ab","ba"};
		p1 = 2;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

class Point {

	int i;
	int j;
	
	public Point(int i, int j) {
	
		this.i = i;
		this.j = j;
	
	}
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
