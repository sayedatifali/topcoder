import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class StrIIRec
{
	public String recovstr(int n, int minInv, String minStr)
	{
		int i;
		int j;
		int inv;
		int N;
		int maxInv;
		int dp[][];
		String ans;
		
		ans = new String();
		N = minStr.length();
		maxInv = n * (n - 1) / 2;
		
		if (minInv > maxInv)
			return ans;
			
		dp = new int[26][26];
		
		buildInv(dp);
			
		ans = "XYZ";
		
		inv = 0;
		
		for (i = 0; i < N - 1; i++) {
		
			for (j = i + 1; j < N; j++) {
			
				if (minStr.charAt(i) > minStr.charAt(j))
					inv++;
			
			}
		
		
		}
		
		i = minStr.charAt(0) - 'a';
		j = i + 1;
		
		for (i = 0, j = n - 1; i + j < 26; i++, j++) {
			
			if (dp[i][j] >= minInv) {
				System.out.println(dp[i][j]);
			}
					
		}
		
		
		System.out.println("Num of inv in " + minStr + ": " + inv);
		
		
		return ans;
	}
	
	public void buildInv(int [][] dp) {
	
		int i;
		int j;
		
		for (i = 0; i < 26; i++) {
		
			for (j = i + 1; j < 26; j++) {
			
				dp[i][j] = ((j - i) * (j - i + 1)) / 2;				
			
			}		
		
		}
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, String p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + "\"" + p2 + "\"");
		System.out.println("]");
		StrIIRec obj;
		String answer;
		obj = new StrIIRec();
		long startTime = System.currentTimeMillis();
		answer = obj.recovstr(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		String p2;
		String p3;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = 1;
		p2 = "ab";
		p3 = "ba";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 9;
		p1 = 1;
		p2 = "efcdgab";
		p3 = "efcdgabhi";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 11;
		p1 = 55;
		p2 = "debgikjfc";
		p3 = "kjihgfedcba";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 15;
		p1 = 0;
		p2 = "e";
		p3 = "eabcdfghijklmno";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 9;
		p1 = 20;
		p2 = "fcdebiha";
		p3 = "fcdehigba";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
