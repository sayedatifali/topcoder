import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class DNASingleMatcher
{
	public int longestMatch(String sequence1, String sequence2)
	{
		int dp[][];
		int len1, len2;
		
		len1 = sequence1.length();
		len2 = sequence2.length();
		
		dp = new int[len1][len2];
		
		for (int i = 0; i < len1; i++) {
			for (int j = 0; j < len2; j++) {
				dp[i][j] = -1;
			}
		}
		
		longestMatchRecurse(sequence1, sequence2, sequence1.length() - 1, sequence2.length() - 1, dp);

		
		System.out.println("Entire dp array:");
		
		for (int i = 0; i < len1; i++) {
			System.out.println();
			for (int j = 0; j < len2; j++) {
				System.out.print(dp[i][j] + " ");
			}
		}
		
		int max = 0;
		
		for (int i = 0; i < len1; i++) {
			for (int j = 0; j < len2; j++) {
				max = Math.max(dp[i][j], max);
			}
		}
		
		return max;
	}
	
	
	public int longestMatchRecurse(String seq1, String seq2, int i1, int i2, int [][] dp)
	{
		int case1 = 0, case2 = 0, case3 = 0;
		int ans;
		
		if (i1 == -1 || i2 == -1)
			return 0;
			
		if (dp[i1][i2] != -1)
			return dp[i1][i2];
			
		if (seq1.charAt(i1) == seq2.charAt(i2))
			case1 = longestMatchRecurse(seq1, seq2, i1 - 1, i2 - 1, dp) + 1;
			
		dp[i1][i2] = case1;
		
		case2 = longestMatchRecurse(seq1, seq2, i1 - 1, i2, dp);
		if (i1 > 0)
			dp[i1 - 1][i2] = case2;
		
		case3 = longestMatchRecurse(seq1, seq2, i1, i2 - 1, dp);	
		if (i2 > 0)
			dp[i1][i2 - 1] = case3;
				
//		ans = Math.max(case1, case2);
//		ans = Math.max(case3, ans);
		
//		dp[i1][i2] = ans;
		
		return case1;	
	
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"");
		System.out.println("]");
		DNASingleMatcher obj;
		int answer;
		obj = new DNASingleMatcher();
		long startTime = System.currentTimeMillis();
		answer = obj.longestMatch(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		String p1;
		int p2;
		
		// ----- test 0 -----
		p0 = "AAAAAAAAAAAAAAAAAAAAACCCGGGGGGGGGGGGG";
		p1 = "AAAACCCGGGGGGGGGGGGGGGGTTTTTTTTTGGGGGGGGGGGG";
		p2 = 20;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "CAT";
		p1 = "AT";
		p2 = 2;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC";
		p1 = "GAGAGGAGAAAGAGAGAGAAGAGAGGAGGAAAGAGAGAGAAAAGAGGGAA";
		p2 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "ACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTAC";
		p1 = "GTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGTACGT";
		p2 = 48;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = "TC";
		p1 = "CATCAT";
		p2 = 2;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = "CGCATTAGATTCAGAG";
		p1 = "CGCATGAGTAGATTC";
		p2 = 7;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
