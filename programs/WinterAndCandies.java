import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class WinterAndCandies
{
	public boolean marked[];
	public int mem[];
	
	public int getNumber(int[] type)
	{
		int i;
		int j;
		int K;
		int N;
		
		N = type.length;
		marked = new boolean[N];
		
		Arrays.sort(type);
		
		K = type[N - 1];
		mem = new int[K + 1];
		
		for (i = 0; i < K + 1; i++)
			mem[i] = -1;
		
		int count = 0;
		
		for (i = 1; i <= K; i++) {
			mem[i] = getKCount(i, type);
			count += mem[i];
		}
		
		return count;
		
	}
	
	public int getKCount(int K, int [] type) {
		
		int i;
		int count;
		
		if (K == 0)
			return 1;
			
		if (mem[K] != -1)
			return mem[K];
		
		count = 0;
		
		for (i = 0; i < type.length; i++) {
		
			if (type[i] == K) {
				count += getKCount(K - 1, type);
			}
		
		}
		
		return count;
		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}");
		System.out.println("]");
		WinterAndCandies obj;
		int answer;
		obj = new WinterAndCandies();
		long startTime = System.currentTimeMillis();
		answer = obj.getNumber(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new int[]{1,3,2};
		p1 = 3;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{1,1,2};
		p1 = 4;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{1,3,2,5,7,4,5,4};
		p1 = 9;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{1,1,2,2,3,3,4,4,5,5};
		p1 = 62;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{2};
		p1 = 0;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
