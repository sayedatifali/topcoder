import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class MathContest
{
	public int countBlack(String ballSequence, int repetitions)
	{
		int i;
		int N;
		int n;
		StringBuilder ball;
		String balls;
		
		ball = new StringBuilder(ballSequence);		
		n = ballSequence.length();
		N = n * repetitions;
		
		for (i = 1; i < repetitions; i++) {
			ball.append(ballSequence);
		}
		
		balls = ball.toString();
		
//		System.out.println("balls = " + balls +"; N = " + N);
		
		char color = 'B';
		int black = 0;
		boolean reverse = false;
		int lasti = 0;
		N--;
		int end = N;
		
		i = 0;
		
		while (end >= 0) {
		
//			System.out.println("i = " + i);
		
			if (balls.charAt(i) == color) {
				black++;
				color = (color == 'W') ? 'B': 'W';
				if (reverse) {
					i--;
					N--;
				}
				else
					i++;
				
			}
			else {
				if (reverse) {
					i = lasti;
					N--;
				} else {
					lasti = i + 1;
					i = N;
				}
				reverse = !reverse;
			}
			end--;
		}
		
		return black;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + p1);
		System.out.println("]");
		MathContest obj;
		int answer;
		obj = new MathContest();
		long startTime = System.currentTimeMillis();
		answer = obj.countBlack(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String p0;
		int p1;
		int p2;
		
		// ----- test 0 -----
		p0 = "BBWWB";
		p1 = 1;
		p2 = 2;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = "BBB";
		p1 = 10;
		p2 = 1;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = "BW";
		p1 = 10;
		p2 = 20;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = "WWWWWWWBWWWWWWWWWWWWWW";
		p1 = 1;
		p2 = 2;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
