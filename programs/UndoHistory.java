import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class UndoHistory
{
	public HashSet<String> undo;
	
	public int minPresses(String[] lines)
	{
		int i, j;
		int M, N;
		int press = 0;
		int k;
		int index;
		String str;
		String textBuf = "";
		StringBuffer strBuf;
		
		M = lines.length;
		
		undo = new HashSet<String> ();
		strBuf = null;
		
		for (i = 0; i < M; i++) {
		
			N = lines[i].length();
			str = lines[i];
			
			textBuf = (strBuf != null) ? strBuf.toString(): null;
			
			strBuf = new StringBuffer("");
			j = 0;
			
			System.out.println("textBuf = \"" + textBuf + "\"");
			
			if (textBuf != null && str.startsWith(textBuf)) {
				press++;
				j = textBuf.length();
				strBuf.append(textBuf);
				undo.add(strBuf.toString());
			}
			
			for (; j < N; j++) {
			
				index = j;
			
				for (k = j + 1; k <= N; k++) {
				
					if (undo.contains(str.substring(j, k)))
						index = k;
				
				}
				
				
				
				if (index == 0 && j == 0 && undo.size() != 0)
					press += 2;
				
				if (index == j) {
				
					strBuf.append(str.charAt(j));					
					
				
				} else {
				
					strBuf.append(str.substring(j, index));
					
					press++;
					
					j = index - 1;
				}
				
//				System.out.println(strBuf.toString());
				
				undo.add(strBuf.toString());
				
				press++;
						
			
			}
			
			press++;
		
		}
		
		
		return press;
		
		
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		UndoHistory obj;
		int answer;
		obj = new UndoHistory();
		long startTime = System.currentTimeMillis();
		answer = obj.minPresses(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{"tomorrow","topcoder"};
		p1 = 18;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"a","b"};
		p1 = 6;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"a","ab","abac","abacus"};
		p1 = 10;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"pyramid","sphinx","sphere","python","serpent"};
		p1 = 39;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"ba","a","a","b","ba"};
		p1 = 13;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
