import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class LongLongNim
{
//	public int MAX = 1000000001;
	public boolean winPos[];
	public boolean defined[];
	public int [] validMove;
	public int N;
	
	public int numberOfWins(int maxN, int[] moves)
	{
		int i;
		int count = 0;
		
		N = moves.length;
		
		winPos = new boolean[maxN + 1];
		defined = new boolean[maxN + 1];
		validMove = moves;
		
		for (i = 0; i < maxN + 1; i++) {
			winPos[i] = false;
			defined[i] = false;
		}
		
		
		countWinning(maxN);
		
		for (i = 0; i < maxN + 1; i++) {
			if (defined[i] && !winPos[i])
				count++;
		}
		
		return count;
		
	}
	
	public void countWinning(int maxN) {
	
		isWinning(maxN);
	
	}
	
	public boolean isWinning(int n) {
	
		int i;
		int temp;
		
		if (defined[n])
			return winPos[n];
			
		for (i = 0; i < N; i++) {
		
			temp = n - validMove[i];
			
			if (temp >= 0) {
				if (!isWinning(temp)) {
					defined[n] = true;
					winPos[n] = true;
					return true;
				}
			}
		}
	
		defined[n] = true;
		winPos[n] = false;
		
		return false;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		LongLongNim obj;
		int answer;
		obj = new LongLongNim();
		long startTime = System.currentTimeMillis();
		answer = obj.numberOfWins(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		int p2;
		
		// ----- test 0 -----
		p0 = 20;
		p1 = new int[]{1,2,3};
		p2 = 5;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 999;
		p1 = new int[]{1};
		p2 = 499;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 1000000000;
		p1 = new int[]{1,2};
		p2 = 333333333;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 6543;
		p1 = new int[]{2,4,7,11,20};
		p2 = 1637;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
